{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","filter","element","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","aboutText","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.36a0f262.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom'\n\nexport default function Navbar(props) {\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n    <div className=\"container-fluid\">\n      <a className=\"navbar-brand\" href =\"#\"><b>{props.title}</b></a>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <li className=\"nav-item\">\n            <a className=\"nav-link active mx-3\" aria-current=\"page\" href=\"#\">Home </a>\n            {/* <Link className=\"nav-link active mx-3\" aria-current=\"page\" to=\"/\">Home </Link> */}\n          </li>\n          {/* <li className=\"nav-item\">\n            <Link className=\"nav-link active mx-2\" to=\"/about\">{props.aboutText}</Link>\n          </li>   */}\n        </ul>\n        <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n</div>\n      </div>\n    </div>\n  </nav>\n  )\n}\n\nNavbar.propTypes ={\n    title: PropTypes.string.isRequired,\n    aboutText: PropTypes.string.isRequired\n}\n\nNavbar.defaultProps = {\n    title : 'Set title here...',\n    aboutText: 'About ' \n}","import React, {useState} from 'react'\n\n\nexport default function TextForm(props) {\n  const handleUpClick = () =>{\n    console.log(\"Uppercase was clicked\" + text);\n    let newText = text.toUpperCase();\n    setText(newText)\n    props.showAlert(\"Converted to uppercase!\", \"success\");\n  }\n  \n  const handleLoClick = () =>{\n    console.log(\"Lowercase was clicked\" + text);\n    let newText = text.toLowerCase();\n    setText(newText)\n    props.showAlert(\"Converted to lowercase!\", \"success\");\n  }\n\n  const handleCopy= () =>{\n    var text = document.getElementById(\"Mybox\");\n    text.select();\n    navigator.clipboard.writeText(text.value);\n    props.showAlert(\"Text Copied!\", \"success\");\n  }\n\n  const handleClearClick = () =>{\n    console.log(\"Cleared\" + text);\n    let newText = ''\n    setText(newText)\n    props.showAlert(\"Text Cleared!\", \"success\");\n  }\n\n  const handleOnChange = (event) =>{ \n    console.log('OnChange');\n    setText(event.target.value);\n  }\n    const [text, setText] = useState('');\n  return (\n    <>\n    <div className=\"container\" style={{color: props.mode === 'dark'?'white':'#042743'}}>\n        <h1 className='mb-2'>{props.heading}</h1>\n        <div className=\"mb-3\">\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode === 'dark'?'#13466e':'white', color:props.mode === 'dark'?'white':'#042743'}} id=\"Mybox\" rows=\"8\"></textarea>\n        </div>\n        <button disabled={text.length===0} className=\"btn btn-success mx-1 my-1\" onClick={handleUpClick}> Convert to Uppercase </button>\n        <button disabled={text.length===0} className=\"btn btn-success mx-1 my-1\" onClick={handleLoClick}> Convert to Lowercase </button>\n        <button disabled={text.length===0} className=\"btn btn-success mx-1 my-1\"  onClick={handleCopy}> Copy Text </button>\n        <button disabled={text.length===0} className= \"btn btn-danger mx-1 my-1\" onClick={handleClearClick}> Clear Text </button>\n    </div> \n    <div className=\"container my-4\" style={{color: props.mode === 'dark'?'white':'#042743'}}>\n      <h2><b>Your Text Summary :-</b></h2>\n      <p> There are <u>{text.split(\" \").filter((element)=>{return element.length!==0}).length} Words</u> & <u>{text.length} Characters</u></p>\n    </div>\n    </>\n  )\n}\n","import React from 'react'\n\nexport default function Alert(props) {\n\n    const capitalize = (word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n  return (\n    <div style={{height: '20px'}}> \n    {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n        <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\n    </div>}\n    </div>\n  )\n}\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/Textform';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\n\n\nfunction App() { \n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode =()=>{\n    if(mode === 'light'){\n    setMode ('dark');\n    document.body.style.backgroundColor = '#042743';\n    showAlert(\"Dark Mode has been enabled\",\"success\");\n    // document.title = 'TextUtils-Dark Mode';\n  }\n    else{\n    setMode ('light');\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"Light Mode has been enabled\",\"success\");\n    // document.title = 'TextUtils-Light Mode';\n  }\n}\n  return (\n    <>\n    {/* <Router> */}\n<Navbar title =\"TextUtils\" aboutText =\"About Us\" mode={mode} toggleMode={toggleMode} />\n<Alert alert ={alert}/>\n<div className=\"container my-5 mx-6\"> \n{/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About/> */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/\"> */}\n            <TextForm showAlert ={showAlert} heading=\"Try TextUtils - Word Counter | Character Counter\" mode={mode}/>\n          {/* </Route> */}\n        {/* </Switch> */}\n</div>\n{/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}